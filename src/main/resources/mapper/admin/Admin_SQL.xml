<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="admin">
	
	<select id="dash_count" parameterType="hashmap" resultType="hashmap"> <!-- adminMain대쉬보드 -->
		<![CDATA[
			select 
			(select count(member_no) from member) m_cnt,
			(select count(member_no) from goods_qna) g_cnt,
			(select count(member_no) from qna) q_cnt,
			(select count(member_no) from as_list) as_cnt,
			(select count(order_state) from order_list where order_state = 0) o_cnt_a,
			(select count(order_state) from order_list where order_state = 1) o_cnt_b,
			(select count(order_state) from order_list where order_state = 2) o_cnt_c,
			(select count(order_state) from order_list where order_state = 3) o_cnt_d,
			(select count(order_state) from order_list where order_state = 4) o_cnt_e,
			(select count(order_state) from order_list where order_state = 5) o_cnt_f
			from dual 
		]]>
	</select>
	
	<select id="order_admin_a" parameterType="hashmap" resultType="hashmap"> <!-- 주문현황 보기 -->
		<![CDATA[
			select l.order_date, d.order_no, m.member_no, m.member_id, m.member_name, g.goods_name,
  			      l.order_total_order_price, l.order_total_pay_price, TO_CHAR(l.order_date, 'YYYY-MM-DD HH24:MI:SS') order_date,
  			      l.order_pay_bank, l.order_express, l.order_state,
	        
	        (select count(SD.order_no) from order_detail SD where SD.order_no = D.order_no ) as hap_cnt
			
			from member m, order_list l, order_detail d, goods g
			
			where m.member_no = l.member_no
			and l.order_no = d.order_no
			and d.goods_no = g.goods_no
			
			and l.order_state = #{order_state}
						
			and D.ORDER_DETAIL_NO in (select min(ORDER_DETAIL_NO) as Dno from order_detail group by order_no)
		]]>
	</select>
	
	<update id="order_state" parameterType="hashmap" > <!-- 주문상태 변경 -->
		<![CDATA[
			UPDATE order_list

			SET	order_state = order_state + 1
			
			WHERE order_no = ${order_no}
		]]>
	</update>
	
	<update id="order_state_ex" parameterType="hashmap" > <!-- 주문상태.배송 변경 -->
		<![CDATA[
			UPDATE order_list

			SET	
			order_state = order_state + 1,
			order_express = #{order_express}

			WHERE order_no = ${order_no}
		]]>
	</update>
	
	<select id="order_detail" parameterType="hashmap" resultType="hashmap"> <!-- 주문list 상세보기 -->
		<![CDATA[
			select m.member_name, m.member_phone, m.member_email,
	        l.order_name, l.order_zipcode, l.order_addr1, l.order_addr2, l.order_phone,
	        l.order_no, l.order_state, l.order_pay_option, l.ORDER_PAY_NAME, l.ORDER_DATE, l.ORDER_PAY_BANK,
	        l.order_total_order_price, l.order_use_point, l.order_fee, l.order_total_pay_price
			
			from member m, order_list l
			
			where m.member_no = l.member_no
			and l.order_no = ${order_no}
		]]>
	</select>
	
	<select id="order_detail_sub" parameterType="hashmap" resultType="hashmap"> <!-- 주문detail 상세보기 -->
		<![CDATA[
			select g.goods_no, g.goods_name, g.GOODS_THUMBNAIL, d.order_detail_color, d.order_detail_size, d.order_detail_amount,
	        d.order_detail_price, d.coupon_discount, d.order_discount_apply
			
			from order_detail d, goods g
			
			where d.goods_no = g.goods_no
			and d.order_no = ${order_no}
		]]>
	</select>
	
	<select id="as_admin_list" parameterType="hashmap" resultType="hashmap"> <!-- 주문detail 상세보기 -->
		<![CDATA[
			select l.as_no, l.as_gubun, l.member_no, l.as_title, l.as_content, l.order_no, l.order_detail_no,
	        l.as_state, l.order_state, TO_CHAR(l.as_sdate, 'YYYY-MM-DD HH24:MI:SS') as_sdate, TO_CHAR(l.as_edate, 'YYYY-MM-DD HH24:MI:SS') as_edate,
	        m.member_id, m.member_name, m.member_phone, m.member_email, m.member_grade
				
	        from as_list l, member m
	        
	        where l.member_no = m.member_no
	        and l.as_state = ${as_state }

	        order by l.as_no asc
		]]>
	</select>
	
	<update id="as_cancle_a" parameterType="hashmap" > <!-- // as요청취소 - as_list state=3 edate갱싱  -->
		<![CDATA[
			UPDATE as_list
			SET	
			as_state = 3,
			as_title = ' ---- 요청내용 확인중 취소처리---- ', 
			as_edate = TO_DATE(sysdate, 'YYYY-MM-DD HH24:MI:SS')
			WHERE as_no = ${as_no}
		]]>
	</update>
		
	<update id="order_list_cancle" parameterType="hashmap" > <!-- as요청취소 - order_list 원상복구  -->
		<![CDATA[
			UPDATE order_list
			SET	
			order_state = ${order_state}
			WHERE order_no = ${order_no}
		]]>
	</update>
	
	<update id="as_ok_state" parameterType="hashmap" > <!-- 신규 as요청확인(AS_LIST state 확인중으로 변경)  -->
		<![CDATA[
			UPDATE as_list
			SET as_state = ${state_num}
			WHERE as_no = ${as_no}
		]]>
	</update>
	<update id="as_ok_orderState" parameterType="hashmap" > <!-- 신규 as요청확인(Order_LIST STATE변경)  -->
		<![CDATA[
			UPDATE order_list
			SET order_state = ${gubun_num}
			WHERE order_no = ${order_no}
		]]>
	</update>
	
	<!-- 상품교환 -->
	<select id="change_form_a" parameterType="hashmap" resultType="hashmap"> <!-- AS_list에서 정보 가져옴 -->
		<![CDATA[
			select l.as_no, l.as_gubun, l.member_no, l.as_title, l.as_content, l.order_no, l.order_detail_no,
	        TO_CHAR(l.as_sdate, 'YYYY-MM-DD HH24:MI:SS') as_sdate, d.order_detail_price, l.order_state,
	        d.order_discount_apply, d.order_detail_save_point, d.goods_att_no,
	        d.goods_no, d.order_detail_amount, d.order_detail_color, d.order_detail_size, g.goods_name
				
	        from as_list l, order_detail d, goods g
	        
	        where l.order_detail_no = d.order_detail_no
	        and d.goods_no = g.goods_no
	        and as_no = ${as_no }
		]]>
	</select>
	<select id="change_form_b" parameterType="hashmap" resultType="hashmap"> <!-- 교환요청한 상품속성 가져옴 -->
		<![CDATA[
			select goods_att_no, goods_att_size, goods_att_color, goods_att_amount
				
	        from goods_attribute
	        
	        where goods_no = ${goods_no }
		]]>
	</select>
	<insert id="change_detail_insert" parameterType="hashmap"> <!--  -->
		<![CDATA[
			insert into order_detail ( order_detail_no, order_no, goods_no, goods_att_no, order_detail_price,
			order_detail_color, order_detail_size, order_detail_amount, coupon_no, coupon_discount,
            order_discount_apply, order_detail_save_point, order_detail_state )
			VALUES 
			( ORDER_DETAIL_NO_SEQ.NEXTVAL, ${order_no}, ${goods_no}, ${new_goods_att_no}, ${order_detail_price},
			  #{order_detail_color}, #{order_detail_size}, ${order_detail_amount}, 0, 0, ${order_discount_apply}, ${order_detail_save_point}, '10')
		]]>
	</insert>
	<update id="change_detail_state" parameterType="hashmap" > <!--   -->
		<![CDATA[
			UPDATE order_detail
			SET order_detail_state = '20'
			WHERE order_detail_no = ${order_detail_no}
		]]>
	</update>
	<update id="change_goods_att_plus" parameterType="hashmap" > <!--   -->
		<![CDATA[
			UPDATE goods_attribute
			SET goods_att_amount = goods_att_amount + ${order_detail_amount}
			WHERE goods_att_no = ${old_goods_att_no}
		]]>
	</update>
	<update id="change_goods_att_minus" parameterType="hashmap" > <!--   -->
		<![CDATA[
			UPDATE goods_attribute
			SET goods_att_amount = goods_att_amount - ${order_detail_amount}
			WHERE goods_att_no = ${new_goods_att_no}
		]]>
	</update>
	<update id="as_final_state" parameterType="hashmap" > <!-- )  -->
		<![CDATA[
			UPDATE as_list
			SET
			as_state = '3',
			as_edate = TO_DATE(sysdate, 'YYYY-MM-DD HH24:MI:SS')
			WHERE as_no = ${as_no}
		]]>
	</update>
	<update id="change_final_orderState" parameterType="hashmap" > <!--   -->
		<![CDATA[
			UPDATE order_list
			SET order_state = '2'
			WHERE order_no = ${order_no}
		]]>
	</update>
	<update id="order_list_chagam" parameterType="hashmap" > <!--   -->
		<![CDATA[
			UPDATE order_list
			SET
			order_total_pay_price = order_total_pay_price - ${order_discount_apply}, 
			order_save_point = order_save_point - ${order_detail_save_point}
			WHERE order_no = ${order_no}
		]]>
	</update>
	<insert id="point_chagam" parameterType="hashmap"> <!--  -->
		<![CDATA[
			INSERT INTO POINT (POINT_NO, MEMBER_NO, POINT_VAL, POINT_USE_DATE, POINT_TOTAL)
			VALUES 
			( POINT_NO_SEQ.NEXTVAL, ${member_no}, ${order_detail_save_point},
			 TO_DATE(sysdate, 'YYYY-MM-DD HH24:MI:SS'), ${total})
		]]>
	</insert>
	<select id="point_total" parameterType="hashmap" resultType="hashmap">
		<![CDATA[
			select * from (
			select p.point_total
		    from order_list l, point p
		    where l.member_no = p.member_no
		    and l.order_no = ${order_no}
		    order by p.point_no desc )
		    where rownum = 1
		]]>
	</select>
	<update id="cashback_final_orderState" parameterType="hashmap" > <!--   -->
		<![CDATA[
			UPDATE order_list
			SET order_state = ${order_state}
			WHERE order_no = ${order_no}
		]]>
	</update>
	
	<select id="selectMemberList" parameterType="hashmap" resultType="hashmap">
		<![CDATA[
			SELECT
				AAA.*
			FROM(
				SELECT
				COUNT(*) OVER() AS TOTAL_COUNT,
				AA.*
				FROM(
					SELECT 
						ROWNUM RNUM,
						MEMBER_NO,
						MEMBER_ID,
						MEMBER_NAME,
						TO_CHAR(MEMBER_BIRTH,'YYYY/MM/DD') MEMBER_BIRTH,
						MEMBER_EMAIL,
						MEMBER_PHONE,				
						MEMBER_ZIPCODE,
						MEMBER_ADDR1,
						MEMBER_ADDR2,
		                TO_CHAR(MEMBER_DATE, 'YYYY/MM/DD') MEMBER_DATE,
		                MEMBER_GRADE,
		                MEMBER_TOTAL,
		                TO_CHAR(MEMBER_LOG, 'YYYY/MM/DD') MEMBER_LOG,
		                DECODE(MEMBER_DELETE,'0','가입','탈퇴') MEMBER_DELETE,
						EMAIL_AGREE,
						SMS_AGREE
					FROM 
						MEMBER 
		]]>
			<choose>
				<when test="searchOption == 'all'">
					WHERE 
						MEMBER_ID LIKE '%${keyword}%'
					OR 
						MEMBER_NAME LIKE '%${keyword}%'
					OR 
						MEMBER_GRADE LIKE '%${keyword}%'
				</when>
				<when test="searchOption == 'MEMBER_ID'">
					WHERE 
						MEMBER_ID LIKE '%${keyword}%'
				</when>
				<when test="searchOption == 'MEMBER_NAME'">
					WHERE 
						MEMBER_NAME LIKE '%${keyword}%'
				</when>
				<when test="searchOption == 'MEMBER_GRADE'">
					WHERE 
						MEMBER_GRADE LIKE '%${keyword}%'
				</when>
				<otherwise>
				</otherwise>
			</choose>
					)AA
				)AAA
				WHERE
					AAA.RNUM BETWEEN #{START} AND #{END}
	</select>
</mapper>